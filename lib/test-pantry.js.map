{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f3a26f7dfda5688b732c","webpack:///(webpack)/buildin/amd-define.js","webpack:///./src/recipe-context.js","webpack:///./src/util.js","webpack:///./~/seedrandom/seedrandom.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/test-pantry.js"],"names":["name","seed","pantry","random","randomInt","a","b","min","max","undefined","Math","ceil","floor","flipCoin","sample","args","length","Array","isArray","count","rollDie","last","looksLikeIterator","isEmptyObject","o","Object","keys","Pantry","components","howMany","shift","filter","n","forEach","component","recipeFn","ctx","recipeCtx","initialValues","handlesInput","splice","map","cook","call","lastGenerated","reduce","acc","assign","callPropertyFns","result","k","v","buildMergeFn","fn","input","values","JSON","stringify","buildObject","buildObjectFn","coerceToFn","objOrFn","value","key","recipeFor","objOrFns","fns","vals","returnFn","reset"],"mappings":"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;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB,iBAAiB;;AAElE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB,aAAa;AAC9D;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,8BAA8B;AAC9B,0BAA0B;AAC1B,iBAAiB;AACjB,oBAAoB;AACpB;AACA,2BAA2B;AAC3B,aAAa;AACb,aAAa;AACb,eAAe;AACf;AACA,uBAAuB;AACvB,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;;AAElC;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4CAA4C,EAAE;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;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","file":"test-pantry.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"test-pantry\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"test-pantry\"] = factory();\n\telse\n\t\troot[\"test-pantry\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f3a26f7dfda5688b732c","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 0\n// module chunks = 0","import seedrandom from 'seedrandom'\n\nexport default function(name, seed, pantry) {\n  const random = seedrandom(seed)\n\n  // Returns a random integer between min (included) and max (excluded)\n  // Using Math.round() will give you a non-uniform distribution!\n  function randomInt(a, b) {\n    let [min,max] = [a, b]\n    if (max == undefined) {\n      [min,max] = [0, min]\n    } else {\n      max++\n    }\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(random() * (max - min)) + min;\n  }\n\n  function flipCoin() {\n    return random() > 0.5\n  }\n\n  function sample(...args) {\n    const a = args[0] && args.length == 1 && Array.isArray(args[0]) ? args[0] : args;\n    return a[randomInt(0, a.length)]\n  }\n\n  return {\n    count:   0,\n             name,\n             pantry,\n             random,\n             randomInt,\n             flipCoin,\n             sample,\n    rollDie: randomInt,\n    last:    (name) => pantry.last(name)()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/recipe-context.js","export function looksLikeIterator(args) {\n  return args.length == 3\n         && typeof args[1] == 'number'\n         && typeof args[2] == 'object'\n}\n\nexport function isEmptyObject(o) {\n  return typeof o == 'object'\n         && Object.keys(o).length == 0\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","/**\n\nseedrandom.js\n=============\n\nSeeded random number generator for Javascript.\n\nversion 2.3.6<br>\nAuthor: David Bau<br>\nDate: 2014 May 14\n\nCan be used as a plain script, a node.js module or an AMD module.\n\nScript tag usage\n----------------\n\n<script src=//cdnjs.cloudflare.com/ajax/libs/seedrandom/2.3.6/seedrandom.min.js>\n</script>\n\n// Sets Math.random to a PRNG initialized using the given explicit seed.\nMath.seedrandom('hello.');\nconsole.log(Math.random());          // Always 0.9282578795792454\nconsole.log(Math.random());          // Always 0.3752569768646784\n\n// Sets Math.random to an ARC4-based PRNG that is autoseeded using the\n// current time, dom state, and other accumulated local entropy.\n// The generated seed string is returned.\nMath.seedrandom();\nconsole.log(Math.random());          // Reasonably unpredictable.\n\n// Seeds using the given explicit seed mixed with accumulated entropy.\nMath.seedrandom('added entropy.', { entropy: true });\nconsole.log(Math.random());          // As unpredictable as added entropy.\n\n// Use \"new\" to create a local prng without altering Math.random.\nvar myrng = new Math.seedrandom('hello.');\nconsole.log(myrng());                // Always 0.9282578795792454\n\n\nNode.js usage\n-------------\n\nnpm install seedrandom\n\n// Local PRNG: does not affect Math.random.\nvar seedrandom = require('seedrandom');\nvar rng = seedrandom('hello.');\nconsole.log(rng());                  // Always 0.9282578795792454\n\n// Autoseeded ARC4-based PRNG.\nrng = seedrandom();\nconsole.log(rng());                  // Reasonably unpredictable.\n\n// Global PRNG: set Math.random.\nseedrandom('hello.', { global: true });\nconsole.log(Math.random());          // Always 0.9282578795792454\n\n// Mixing accumulated entropy.\nrng = seedrandom('added entropy.', { entropy: true });\nconsole.log(rng());                  // As unpredictable as added entropy.\n\n\nRequire.js usage\n----------------\n\nSimilar to node.js usage:\n\nbower install seedrandom\n\nrequire(['seedrandom'], function(seedrandom) {\n  var rng = seedrandom('hello.');\n  console.log(rng());                  // Always 0.9282578795792454\n});\n\n\nNetwork seeding via a script tag\n--------------------------------\n\n<script src=//cdnjs.cloudflare.com/ajax/libs/seedrandom/2.3.6/seedrandom.min.js>\n</script>\n<!-- Seeds using urandom bits from a server. -->\n<script src=//jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n</script>\n\nExamples of manipulating the seed for various purposes:\n\nvar seed = Math.seedrandom();        // Use prng with an automatic seed.\ndocument.write(Math.random());       // Pretty much unpredictable x.\n\nvar rng = new Math.seedrandom(seed); // A new prng with the same seed.\ndocument.write(rng());               // Repeat the 'unpredictable' x.\n\nfunction reseed(event, count) {      // Define a custom entropy collector.\n  var t = [];\n  function w(e) {\n    t.push([e.pageX, e.pageY, +new Date]);\n    if (t.length < count) { return; }\n    document.removeEventListener(event, w);\n    Math.seedrandom(t, { entropy: true });\n  }\n  document.addEventListener(event, w);\n}\nreseed('mousemove', 100);            // Reseed after 100 mouse moves.\n\nThe \"pass\" option can be used to get both the prng and the seed.\nThe following returns both an autoseeded prng and the seed as an object,\nwithout mutating Math.random:\n\nvar obj = Math.seedrandom(null, { pass: function(prng, seed) {\n  return { random: prng, seed: seed };\n}});\n\n\nVersion notes\n-------------\n\nThe random number sequence is the same as version 1.0 for string seeds.\n* Version 2.0 changed the sequence for non-string seeds.\n* Version 2.1 speeds seeding and uses window.crypto to autoseed if present.\n* Version 2.2 alters non-crypto autoseeding to sweep up entropy from plugins.\n* Version 2.3 adds support for \"new\", module loading, and a null seed arg.\n* Version 2.3.1 adds a build environment, module packaging, and tests.\n* Version 2.3.4 fixes bugs on IE8, and switches to MIT license.\n* Version 2.3.6 adds a readable options object argument.\n\nThe standard ARC4 key scheduler cycles short keys, which means that\nseedrandom('ab') is equivalent to seedrandom('abab') and 'ababab'.\nTherefore it is a good idea to add a terminator to avoid trivial\nequivalences on short string seeds, e.g., Math.seedrandom(str + '\\0').\nStarting with version 2.0, a terminator is added automatically for\nnon-string seeds, so seeding with the number 111 is the same as seeding\nwith '111\\0'.\n\nWhen seedrandom() is called with zero args or a null seed, it uses a\nseed drawn from the browser crypto object if present.  If there is no\ncrypto support, seedrandom() uses the current time, the native rng,\nand a walk of several DOM objects to collect a few bits of entropy.\n\nEach time the one- or two-argument forms of seedrandom are called,\nentropy from the passed seed is accumulated in a pool to help generate\nfuture seeds for the zero- and two-argument forms of seedrandom.\n\nOn speed - This javascript implementation of Math.random() is several\ntimes slower than the built-in Math.random() because it is not native\ncode, but that is typically fast enough.  Some details (timings on\nChrome 25 on a 2010 vintage macbook):\n\n* seeded Math.random()          - avg less than 0.0002 milliseconds per call\n* seedrandom('explicit.')       - avg less than 0.2 milliseconds per call\n* seedrandom('explicit.', true) - avg less than 0.2 milliseconds per call\n* seedrandom() with crypto      - avg less than 0.2 milliseconds per call\n\nAutoseeding without crypto is somewhat slower, about 20-30 milliseconds on\na 2012 windows 7 1.5ghz i5 laptop, as seen on Firefox 19, IE 10, and Opera.\nSeeded rng calls themselves are fast across these browsers, with slowest\nnumbers on Opera at about 0.0005 ms per seeded Math.random().\n\n\nLICENSE (MIT)\n-------------\n\nCopyright (c)2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n/**\n * All code is in an anonymous closure to keep the global namespace clean.\n */\n(function (\n    global, pool, math, width, chunks, digits, module, define, rngname) {\n\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nimpl = math['seed' + rngname] = function(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      // If called as a method of Math (Math.seedrandom()), mutate Math.random\n      // because that is how seedrandom.js has worked since v1.0.  Otherwise,\n      // it is a newer calling convention, so return the prng directly.\n      function(prng, seed, is_math_call) {\n        if (is_math_call) { math[rngname] = prng; return seed; }\n        else return prng;\n      })(\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  }, shortseed, 'global' in options ? options.global : (this == math));\n};\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\n/** @constructor */\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability discard an initial batch of values.\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\n  })(width);\n}\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto if available.\n//\n/** @param {Uint8Array|Navigator=} seed */\nfunction autoseed(seed) {\n  try {\n    global.crypto.getRandomValues(seed = new Uint8Array(width));\n    return tostring(seed);\n  } catch (e) {\n    return [+new Date, global, (seed = global.navigator) && seed.plugins,\n            global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to intefere with determinstic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math[rngname](), pool);\n\n//\n// Nodejs and AMD support: export the implemenation as a module using\n// either convention.\n//\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  this,   // global window object\n  [],     // pool: entropy pool starts empty\n  Math,   // math: package containing random, pow, and seedrandom\n  256,    // width: each RC4 output is 0 <= x < 256\n  6,      // chunks: at least six RC4 outputs for each double\n  52,     // digits: there are 52 significant digits in a double\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define,  // present with an AMD loader\n  'random'// rngname: name for Math.random and Math.seedrandom\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/seedrandom.js\n// module id = 3\n// module chunks = 0","module.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 4\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 5\n// module chunks = 0","import newRecipeContext from './recipe-context.js'\nimport { looksLikeIterator, isEmptyObject } from './util'\n\nexport default function Pantry() {\n\n  const pantry = function(...args) {\n    let components = args\n    const howMany  = typeof components[0] == 'number' ? components.shift() : 0\n    components     = components.filter(n => n !== undefined)\n\n    components.forEach(component => {\n      if (typeof component == 'string' && !recipeFn(component)) {\n        throw `Unknown factory/trait '${component}'`\n      }\n    })\n    components.forEach(component => {\n      if (typeof recipeFn(component) !== 'function'\n          && typeof component !== 'object'\n          && typeof component !== 'function') {\n        throw `Factory/trait '${component}' not a function`\n      }\n    })\n\n    const ctx = recipeCtx(components[0])\n    if (!ctx) {\n      throw `Unknown context '${components[0]}': unsupported usage`\n    }\n\n    // May need to flip the first and second parameter?\n    let initialValues = {}\n    if (components.length >= 2\n        && typeof components[0] == 'string'\n        && recipeFn(components[0]).handlesInput\n        && typeof components[1] == 'object') {\n      initialValues = components[1]\n      components.splice(1, 1)\n    }\n\n    if (howMany != 0) {\n      return [...Array(howMany)].map(() => cook.call(ctx, components, initialValues))\n    }\n    return cook.call(ctx, components, initialValues)\n  }\n\n  function cook(components, initialValues) {\n    return lastGenerated(components[0], components.reduce((acc, component) => {\n      if (typeof component == 'object') {\n        return Object.assign({}, acc, callPropertyFns.call(this, component))\n      }\n      return recipeFn(component).call(this, acc)\n    }, initialValues))\n  }\n\n  // Given an obj, returns an object with all of the\n  // properties whose values are functions called.\n  function callPropertyFns(o) {\n    return Object.keys(o).reduce((result, k) => {\n      const v   = o[k]\n      result[k] = typeof v == 'function' ? v.call(this) : v\n      return result\n    }, {})\n  }\n\n  // Given a function, returns a version of that function that will\n  // merges its output with the input.\n  // Assumes that if the function accepts an object, it will do the merging\n  // itself; therefore, just implemented for the arity of 0 case.\n  function buildMergeFn(fn) {\n    if (fn.length === 0) {\n      return function(input) {\n        const values = fn.call(this)\n        if (typeof values !== 'object') {\n          if (!isEmptyObject(input)) {\n            throw `Unable to combine '${typeof values}' with input '${JSON.stringify(input)}'`\n          }\n          return values\n        }\n        return Object.assign({}, input, values)\n      }\n    }\n    return fn\n  }\n\n  function buildObject(initialValues, values) {\n    return Object.assign({}, initialValues, callPropertyFns.call(this, values))\n  }\n\n  function buildObjectFn(values) {\n    return function(initialValues) {\n      return buildObject.call(this, initialValues, values)\n    }\n  }\n\n  function coerceToFn(objOrFn) {\n    switch (typeof objOrFn) {\n      case 'object':\n        return buildObjectFn(objOrFn)\n      case 'function':\n        return buildMergeFn(objOrFn)\n      case 'number':\n        return () => objOrFn\n      case 'string':\n      {\n        if (recipeFn(objOrFn)) {\n          return recipeFn(objOrFn)\n        }\n        throw `Bad factory component. '${objOrFn}' is not a known factory name. If you want to return a string, use \"()=>'${objOrFn}'\"`\n      }\n      default:\n        throw `Unknown factory component of type ${typeof objOrFn}: ${objOrFn}`\n    }\n  }\n\n  // All storage of functions is here\n  function recipeFn(name, fn, handlesInput) {\n    if (fn) {\n      fn.handlesInput     = handlesInput\n      pantry[`__${name}`] = fn\n    }\n    return pantry[`__${name}`] || typeof name == 'function' && buildMergeFn(name)\n  }\n\n  // All storage of context is here\n  function recipeCtx(name, seed = undefined) {\n    if (seed) {\n      pantry[`__${name}__context`] = newRecipeContext(name, seed, pantry)\n    }\n    return pantry[`__${name}__context`]\n  }\n\n  // All storage of last is here\n  function lastGenerated(name, value) {\n    const key = `__${name}__last`\n    if (value !== undefined) {\n      pantry[key] = value\n    }\n    return pantry[key]\n  }\n\n  const recipeFor = (name, ...objOrFns) => {\n\n    recipeCtx(name, name)\n\n    const handlesInput = objOrFns.length > 0\n                         && typeof objOrFns[0] == 'function'\n                         && objOrFns[0].length > 0\n\n\n    const fns = objOrFns.map(coerceToFn)\n\n    recipeFn(name, function(initialValues = {}) {\n      recipeCtx(name).count++;\n      return fns.reduce((vals, fn) => fn.call(this, vals), initialValues)\n    }, handlesInput)\n\n    // And return a fn that calls `pantry()` with the arguments\n    // Need to switch the number (if given) to be first.\n    const returnFn = (...args) => {\n      if (typeof args[0] == 'number') {\n        const count = args.shift()\n        return pantry(count, name, ...args)\n      } else if (looksLikeIterator(args)) {\n        // Support `Array(2).fill().map(factory)` and other iterators\n        return pantry(name, args[0])\n      }\n      return pantry(name, ...args)\n    }\n\n    returnFn.reset = (seed = name) => {\n      recipeCtx(name, seed)\n    }\n\n    pantry[name] = returnFn\n\n    return returnFn\n  }\n\n  // Private fn returns function that returns last generated name\n  pantry.last      = function(name) {\n    return () => lastGenerated(name) || pantry(name)\n  }\n\n  // Public API\n  pantry.recipeFor = recipeFor\n  return pantry\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/test-pantry.js"],"sourceRoot":""}